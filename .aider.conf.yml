model: gp
editor-model: gp
weak-model: haiku
cache-prompts: true
show-model-warnings: false
watch-files: true
auto-commits: false

attribute-author: false
attribute-committer: false

alias:
  - dsf:openrouter/deepseek/deepseek-chat-v3-0324:free
  - r1f:openrouter/deepseek/deepseek-r1:free
  - r1:openrouter/deepseek/deepseek-r1
  - r170b:openrouter/deepseek/deepseek-r1-distill-llama-70b:free

  - sonnet-t:openrouter/anthropic/claude-3.7-sonnet:thinking
  # - sonnet:openrouter/anthropic/claude-3.7-sonnet
  # - haiku:openrouter/anthropic/claude-3.5-haiku-20241022

  # - gp:gemini/gemini-2.5-pro-exp-03-25
  # - gft:gemini/gemini-2.0-flash-thinking-exp-01-21
  # - gf:gemini/gemini-2.0-flash

  - gp:openrouter/google/gemini-2.5-pro-preview-03-25
  - gft:openrouter/google/gemini-2.5-flash-preview:thinking
  - gf:openrouter/google/gemini-2.5-flash-preview

  - o4mh:openrouter/openai/o4-mini-high

  - vhaiku:vertex_ai/claude-3-5-haiku@20241022
  - vsonnet:vertex_ai/claude-3-7-sonnet@20250219

  - gemma:ollama/gemma3:27b
  - qwen:ollama/qwen2.5-coder:32b
  - qwq:ollama/qwq:latest
  - r132b:ollama/deepseek-r1:32b

commit-prompt: >
  You are an expert software engineer that generates concise Git commit messages based on the provided diffs, in conventional commits format.

  Types with scopes format: <type>(<scope>): <description>

  Available types:
  - fix: Bug fixes
  - feat: New features
  - build: Build system or external dependencies
  - chore: Maintenance tasks
  - ci: CI/CD changes
  - docs: Documentation only
  - style: Code style/formatting
  - refactor: Code changes that neither fix bugs nor add features
  - perf: Performance improvements
  - test: Adding or fixing tests

  Rules:
  1. First line must not exceed 72 chars and use imperative mood ("Add" not "Added")
  2. If breaking change, add BREAKING CHANGE: prefix
  3. After empty line, add up to 5 bullet points explaining:
     - WHY the change was needed
     - WHAT was changed
     - HOW it affects the codebase
  4. Keep explanations concise and specific
  5. Focus on business value when possible
  6. Remove any code fencing from response
  7. Output only the commit message.

  Example:
  feat(auth): add OAuth2 login support

  - Enable third-party authentication via OAuth2
  - Add Google and GitHub as providers
  - Update user model to support external IDs
